name: VSCode - Code Quality

on:
  push:
    branches: [main]
    paths:
      - 'packages/vscode/**'
      - '.github/workflows/vscode-code-quality.yml'
  pull_request:
    branches: [main]
    paths:
      - 'packages/vscode/**'
      - '.github/workflows/vscode-code-quality.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Check code formatting with Prettier
        run: |
          echo "🎨 Checking code formatting with Prettier..."
          npx prettier --check "packages/vscode/**/*.{ts,tsx,js,jsx,json,md,css}" \
            --ignore-path .gitignore \
            --config .prettierrc.json 2>/dev/null || \
          npx prettier --check "packages/vscode/**/*.{ts,tsx,js,jsx,json,md,css}" \
            --ignore-path .gitignore

      - name: Run ESLint
        run: |
          echo "🔍 Running ESLint checks..."
          npm run lint
        working-directory: packages/vscode

      - name: Check for ESLint warnings
        run: |
          echo "⚠️ Checking for ESLint warnings (non-blocking)..."
          npx eslint src --max-warnings 0 || echo "::warning::ESLint warnings detected. Please review."
        working-directory: packages/vscode
        continue-on-error: true

      - name: Verify package.json formatting
        run: |
          echo "📦 Verifying package.json formatting..."
          npx prettier --check package.json
        working-directory: packages/vscode

      - name: Check for console.log statements
        run: |
          echo "🔎 Checking for console.log statements (excluding webview debug)..."
          if grep -r "console\.log" --include="*.ts" --include="*.tsx" \
             --exclude-dir="node_modules" --exclude-dir="dist" \
             --exclude-dir="out" --exclude-dir="webview" \
             packages/vscode/src; then
            echo "::warning::Found console.log statements in source code. Consider using VS Code's output channel instead."
            exit 1
          else
            echo "✅ No console.log statements found in source code"
          fi
        continue-on-error: true

      - name: Check for TODO comments
        run: |
          echo "📝 Checking for TODO comments..."
          if grep -r "TODO\|FIXME\|HACK" --include="*.ts" --include="*.tsx" \
             --exclude-dir="node_modules" --exclude-dir="dist" \
             --exclude-dir="out" \
             packages/vscode; then
            echo "::notice::Found TODO/FIXME/HACK comments. Please review and address if needed."
          else
            echo "✅ No TODO/FIXME/HACK comments found"
          fi
        continue-on-error: true

      - name: Verify import ordering
        run: |
          echo "📚 Checking import statement ordering..."
          npx eslint src --rule 'import/order: error' --max-warnings 0 || \
            echo "::warning::Import ordering issues detected. Consider organizing imports."
        working-directory: packages/vscode
        continue-on-error: true

      - name: Generate code quality report
        if: always()
        run: |
          echo "## 📊 Code Quality Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Checks Performed" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Prettier formatting" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ ESLint rules" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Package.json formatting" >> $GITHUB_STEP_SUMMARY
          echo "- ⚠️ Console.log detection (warning)" >> $GITHUB_STEP_SUMMARY
          echo "- ℹ️ TODO/FIXME comments (informational)" >> $GITHUB_STEP_SUMMARY
          echo "- ⚠️ Import ordering (warning)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Next Steps" >> $GITHUB_STEP_SUMMARY
          echo "Run \`npm run lint:fix\` locally to automatically fix most issues" >> $GITHUB_STEP_SUMMARY
